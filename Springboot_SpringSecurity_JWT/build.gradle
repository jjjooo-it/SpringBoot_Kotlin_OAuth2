plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // QueryDSL 관련 의존성
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'

    // QueryDSL APT(Annotation Processing Tool) 의존성
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
}

tasks.named('test') {
    useJUnitPlatform()
}

// === QueryDSL 빌드 옵션 ===
def generated = 'src/main/generated'

// QueryDSL QClass 파일 생성 위치 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated)) // 생성된 파일이 저장될 디렉토리 설정
    options.compilerArgs.add('-parameters') // 메서드 파라미터 이름을 유지하는 옵션
}

// Java source set에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ] // Q 클래스 파일이 저장된 디렉토리를 소스 경로에 추가
}

// gradle clean 시 QClass 디렉토리 삭제
clean {
    delete file(generated) // clean 명령 시 QClass 디렉토리 삭제
}
